swagger: "2.0"
info:
  description: "TAMPRE用のAPI"
  version: "1.0.0"
  title: "TAMPRE"
host: "tampre"
basePath: "/v1"
tags:
- name: "user"
  description: "user情報管理"
- name: "friends"
  description: "friends管理"
- name: "request"
  description: "友達申請管理"
schemes:
- "https"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "User情報の登録"
      description: "User情報を登録する"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        description: "ユーザID"
        required: true
        type: "string"
        example: "abcde123"
      - name: "userName"
        in: "query"
        description: "ユーザ名"
        required: true
        type: "string"
        example: "Einstein"
      - name: "birthday"
        in: "query"
        description: "誕生日"
        required: true
        type: "string"
        format: "date"
        pattern: "YYYYMMDD"
        minLength: 0
        maxLength: 8
        example: "18790314"
      - name: "profileImageUrl"
        in: "query"
        description: "プロフ画像のURL"
        required: true
        type: "string"
        format: "url"
        example: "https://www.picture/XXXX.jpg"
      - name: "wishListUrl"
        in: "query"
        description: "欲しいものリストのURL"
        required: true
        type: "string"
        format: "url"
        example: "https://www.wishlist/XXXX.jp"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid value"
  /user/{userId}:
    get:
      tags:
      - "user"
      summary: "User情報の取得"
      description: "User情報を取得する"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid value"
    put:
      tags:
      - "user"
      summary: "User情報の更新"
      description: "User情報を更新する"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId"
        required: true
        type: "string"
        example: "abcde123"
      - name: "userName"
        in: "query"
        description: "ユーザ名"
        type: "string"
        example: "Einstein"
      - name: "birthday"
        in: "query"
        description: "誕生日"
        type: "string"
        format: "date"
        pattern: "YYYY-MM-DD"
        minLength: 0
        maxLength: 10
        example: "18790314"
      - name: "profileImageUrl"
        in: "query"
        description: "プロフ画像のURL"
        type: "string"
        format: "url"
        example: "https://www.picture/XXXX.jp"
      - name: "wishListUrl"
        in: "query"
        description: "欲しいものリストのURL"
        type: "string"
        format: "url"
        example: "https://www.wishlist/XXXX.jp"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid value"
    delete:
      tags:
      - "user"
      summary: "User情報の削除"
      description: "User情報を削除する"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid value"
  /friends/{userId}:
    get:
      tags:
      - "friends"
      summary: "friend情報のリストを取得"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId"
        required: true
        type: "string"
      responses:
        "200":
          description: "get friend info"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Friend"
        "404":
          description: "No Data"
  /friends/{userId}/{friendId}:
    delete:
      tags:
      - "friends"
      summary: "友達を削除する"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId"
        required: true
        type: "string"
      - name: "friendId"
        in: "path"
        description: "friendId"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid request"
  /request/{userId}/{friendId}:
    post:
      tags:
      - "request"
      summary: "友達申請を送る"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId"
        required: true
        type: "string"
      - name: "friendId"
        in: "path"
        description: "friendId"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid request"
  /requested/{userId}:
    get:
      tags:
      - "request"
      summary: "自分に来ている友達申請のリストを取得"
      description: "毎回、アプリ起動時に呼び出し、友達申請が来ていればその情報を取得する。なければ空のリストを返す"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "userId"
        type: "string"
        required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Friend"
  /requested/{userId}/{friendId}:
    post:
      tags:
      - "request"
      summary: "自分に来ている友達申請に返答する"
      description: "trueで許可、falseで拒否"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "userId"
        type: "string"
        required: true
      - in: "path"
        name: "friendId"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "List of user object"
        required: true
        schema:
          type: "object"
          properties:
            accept:
              type: "boolean"
      responses:
        "200":
          description: "successful operation"
  
definitions:
  User:
    type: "object"
    properties:
      userId:
        type: "string"
        example: "abcde123"
      userName:
        type: "string"
        example: "Einstein"
      birthday:
        type: "string"
        example: "YYYYMMDD"
      profileImageUrl:
        type: "string"
        format: "url"
        example: "https://www.image/XXX.jpg"  
      wishListUrl:
        type: "string"
        format: "url"
        example: "https://www.picture/XXX.jp"
  Friend:
    type: "object"
    properties:
      userId:
        type: "string"
        example: "abcde123"
      userName:
        type: "string"
        example: "Einstein"
      profileImageUrl:
        type: "string"
        format: "url"
        example: "https://www.image/XXX.jpg"
